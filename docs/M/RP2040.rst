
.. _rp2040:

RP2040
===============

* 关键词：``Dual Core`` ``QFN56`` ``133MHz`` ``USB1.1 OTG``
* 资源库：`GitHub <https://github.com/SoCXin/RP2040>`_

.. contents::
    :local:

Xin简介
-----------

:ref:`cortex_m0` MCU

.. image:: ./images/RP2040.png
    :target: https://www.raspberrypi.org/documentation/rp2040/getting-started


关键特性
~~~~~~~~~~~~~~

* Arm Cortex-M0+ @ 133MHz Dual Core
* 264KB RAM, 128K-256K Flash
* up to 16MB QSPI Flash
* 2 × UART, 2 × SPI , 2 × I2C
* USB1.1 OTG with UF2

计算性能
~~~~~~~~~~~~~~

**CoreMark** 已成为测量与比较处理器性能的业界标准基准测试，CoreMark的得分越高意味着性能更高，使用C语言包含列举，数学矩阵操作和状态及CRC等运算法则。

Xin选择
-----------


开发资源
~~~~~~~~~~~



Xin应用
-----------




Xin总结
--------------



重点提示
~~~~~~~~~~~~~

浮点运算一般需要在运算结果前写上（float）或者标注f，否则一律会被认为双精度，将会大大增加运算时间。

除法和开方的运算周期过长，如无必要，尽量不要用，尽量将其转化为运算周期较少的加减乘运算


问题收集
~~~~~~~~~~~~~

不管选用内部时钟源还是外部晶振，只要配置成170MHz,芯片肯定会复位。经过反复测试验证，发现设置PLL所产生的时钟只有在不高于80MHz时，芯片才能正常运行。

主频的提高往往意味着功耗的增大或噪声及干扰方面可能加剧。于是试图从系统供电能力、电源稳定度、时钟稳定性方面查找原因，发现芯片的VDDA脚虚焊了，重新处理后芯片于170MHz运行稳健。


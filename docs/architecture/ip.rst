
.. _ip:

片上资源
===============

.. contents::
    :local:
    :depth: 1

IP设计
-----------

`锐成芯微 <https://www.analogcircuit.cn/>`_



中断机制
-----------

中断是计算机发展中一个重要的技术，它的出现很大程度上解放了CPU，提高了CPU的执行效率。

在中断出现之前，CPU对IO采用的是轮询的方式进行服务，这使的CPU纠结在某一个IO上，一直在等待它的响应，如果它不响应，CPU就在原地一直的等下去。这样就导致了其他IO口也在等待CPU的服务，如果某个IO出现了important or emergency affairs，CPU也抽不出身去响应这个IO。

中断控制的主要优点是只有在IO接口需要服务时才去响应它，使得CPU很淡定的做它自己的事情，只有IO口有需求的时候才去响应它。同时中断中也设计了中断优先级，来处理一些很紧急的事件。

所谓中断，是指CPU在正常运行程序时，由于程序的预先安排或内外部事件，引起CPU中断正在运行的程序，而转到发生中断事件程序中。这些引起程序中断的事件称为中断源。
其实从 物理学的角度看，中断是一种电信号，由硬件设备产生，并直接送入中断控制器（如 8259A）的输入引脚上，然后再由中断控制器向处理器发送相应的信号。处理器一经检测到该信号，便中断自己当前正在处理的工作，转而去处理中断。此后， 处理器会通知 OS 已经产生中断。这样，OS 就可以对这个中断进行适当的处理。不同的设备对应的中断不同，而每个中断都通过一个唯一的数字标识，这些值通常被称为中断请求线。

.. contents::
    :local:
    :depth: 1

中断向量
~~~~~~~~~~~~

在Intel X86中可以支持256中向量中断，为了使处理器能使别每种中断源，给它们进行了编号-----> ``中断向量``

这些中断向量在Linux中是如何分配的：

* 编号0～31的向量对应于异常和非屏蔽中断
* 编号32～47的向量（即由IO设备引起的中断）分配给屏蔽中断。
* 编号48～255的向量用来标示软中断。

Linux用其中的128或0x80来实现系统调用非屏蔽中断的向量和异常的向量是固定的。


异常和中断
~~~~~~~~~~~~

异常是指CPU内部出现的中断，即在CPU执行特定指令时出现的非法情况。同时异常也称为同步中断，因此只有在一条指令执行后才会发出中断 ，不可能在指令执行期间发生异常。

* a.程序的错误产生的（eg:除数为0）
* b.异常又分为故障和陷阱，它们都不使用中断控制器，也不能被屏蔽
* C.X86处理处理器中大约有20中异常。Linux内核必须为每种异常提供一个专门的异常处理程序。

中断也称为异步中断。因此它是由其他硬件设备依照 CPU 时钟信号随机产生，即意味着中断能在指令之间发生。

中断又分为外部可屏蔽中断(INTR)和外部非屏蔽中断（NMI），所用I0设备产生的中断请求均引起可屏蔽中断，硬件故障引起的故障则产生非屏蔽中断。


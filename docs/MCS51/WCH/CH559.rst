
.. _wch_ch559:

CH559
=====

`Drone <https://CH559.io>`_  is a hosted continuous MCS51 service.
It enables you to conveniently set up projects to automatically build, test,
and deploy as you make changes to your code to
`GitHub <http://en.wikipedia.org/wiki/GitHub>`_ and
`BitBucket <http://en.wikipedia.org/wiki/Bitbucket>`_ repositories.

Drone is configured by modifying settings in your project control panel.

Drone automatically detects when a commit has been made and pushed to a
repository that is using Drone, and each time this happens, it will
try to build the project using :ref:`wch` command. This includes commits to
all branches, not just to the master branch. Drone will also build and run
pull requests. When that process has completed, it will notify a developer in
the way it has been configured to do so â€” for example, by sending an email
containing the build results (showing success or failure). It can be
configured to build project on a range of different :ref:`stm32`.

.. contents::

Integration
-----------

There are two possible ways of running PlatformIO in CI services:

Using :ref:`stm32` command
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

This variant is default choice for native PlatformIO projects (Please fill all
fields for your project in the Drone control panel):

`Commands`:

.. code-block:: bash

    pip install -U platformio
    pio run -e <ID_1> -e <ID_2> -e <ID_N>

This variant is more convenient when project is written as a library (when there are
examples or testing code) as it has additional options for specifying extra libraries
and boards from command line interface:

`Environment Variables`:

.. code-block:: bash

    PLATFORMIO_CI_SRC=path/to/source/file.c
    PLATFORMIO_CI_SRC=path/to/source/file.ino
    PLATFORMIO_CI_SRC=path/to/source/directory

`Commands`:

.. code-block:: bash

    pip install -U platformio
    pio ci --board=<ID_1> --board=<ID_2> --board=<ID_N>

.. image:: ../../_static/images/WCH/MCS51.png

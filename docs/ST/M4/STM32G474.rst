
.. _st_stm32g474:

STM32G474
===============

:ref:`st` :ref:`cortex_m4` MCU

内嵌了数学运算加速器，丰富的数模外设，运放、比较器、DA、AD等，硬件加密使用的是AES-256，带有双安全存储区域。资源库 `GitHub <https://github.com/SoCXin/STM32G474>`_

.. contents:: 内容索引
    :local:

Xin简介
-----------

关键词：``170MHz`` ``15MSPS DAC`` ``4MSPS ADC`` ``Type-C`` ``ART``

.. image:: ./images/STM32G474.png
    :target: https://www.st.com/zh/microcontrollers-microprocessors/stm32g4-series.html


**关键特性**
~~~~~~~~~~~~~~

* 5个超快速12位ADC（4 Msamples/s）
* 7个12位DAC（15 Msamples/s）
* 7个超快速比较器（17ns）
* 6个具有可编程增益的运算放大器
* 最多3个CAN-FD
* USB Type-C接口以及物理层（PHY）
* USB 2.0 FS
* AES-256硬件

**内核性能**
~~~~~~~~~~~~~~

.. image:: ./images/STM32G4CoreMark.png
    :target: https://blog.csdn.net/xiaolaoban0413/article/details/107547516

目前CoreMark已迅速成为测量与比较处理器性能的业界标准基准测试，CoreMark的得分越高，意味着性能更高，代码使用C语言写成，包含：列举，数学矩阵操作和状态及CRC等运算法则。

Xin对比
-----------


竞品分析
~~~~~~~~~



型号对比
~~~~~~~~~



Xin实践
-----------

STM32G031系列拥有非常丰富的产品规格，目前公开售卖的开发板中最常用的型号为 STM32G031J6 和 STM32G031K8

.. image:: ./images/B_STM32G474.jpg
    :target: https://detail.tmall.com/item.htm?spm=a230r.1.14.3.22c4235cqh3nCy&id=610087556700&ns=1&abbucket=7

开发工具
~~~~~~~~~~~

使用STM32芯片最直接方式是通过 `stm32cube <https://www.st.com/zh/ecosystems/stm32cube.html>`_ 工具构建基本运行体，不用开发者自己去研究寄存器初始化相应外设（但请注意使能）。

源圈OS-Q通过先验证的方式，集成了更多可信赖资源 `PlatformIO STM32G4 Enhanced <https://github.com/OS-Q/P216>`_ 可以作为一个启动模板，作为一个开源编译体系便于多系统下开发。


示例代码
~~~~~~~~~~~

1. 基于STM32CubeMX生成HAL库工程

.. code-block:: bash

    uint8_t RxData;     //中断接收串口1数据
    void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
    {
        if(&huart1 == huart) {
            HAL_UART_Receive_IT(huart, &RxData, 1);
        }
    }

    void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
    {
        if(htim==(&htim17)) //定时器中断函数
        {
            g_run_tick++;
        }
    }

    int main(void)
    {
        /* USER CODE BEGIN 2 */
        HAL_UART_Receive_IT(&huart1, &RxData, 1);   //中断接收使能
        HAL_TIM_PWM_Start(&htim16,TIM_CHANNEL_1);   //PWM输出使能
        HAL_TIM_Base_Start_IT(&htim17);             //定时器使能
        /* USER CODE END 2 */
        while (1)
        {
            /* USER CODE BEGIN 3 */
            HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
            HAL_Delay(500);
        }
        /* USER CODE END 3 */
    }



开源项目
~~~~~~~~~

如果你要探索一些开源项目，可能时常遇到基于 `PlatformIO <https://platformio.org/platforms/ststm32>`_ 构建的工程，通过跨平台编译，直接在编辑器中集成，可以云端部署，比常用的IDE拥有更多的灵活性。


* `Arduino_Core_STM32 <https://github.com/stm32duino/Arduino_Core_STM32>`_
* `STM32CubeG4 <https://github.com/STMicroelectronics/STM32CubeG4>`_


Xin总结
--------------



``重点提示``
~~~~~~~~~~~~~

浮点运算一般需要在运算结果前写上（float）或者标注f，否则一律会被认为双精度，将会大大增加运算时间。

``使用槽点``
~~~~~~~~~~~~~


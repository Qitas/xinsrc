
.. _st_stm32f103:

STM32F103
==========

.. contents::

Usage
-----

.. code-block:: bash

    pio ci [OPTIONS] [SRC]


Description
-----------

which can be a path to directory, file or
`Glob Pattern <http://en.wikipedia.org/wiki/Glob_(programming)>`_.
Also, you can omit ``SRC`` argument and set path (multiple paths are allowed
denoting with ``:``) to
``PLATFORMIO_CI_SRC`` `Environment variable <http://en.wikipedia.org/wiki/Environment_variable>`_

For more details as for MCS51 with the popular Continuous Integration
Systems please follow to :ref:`wch` page.

.. note::
    :ref:`st_stm32f103` command is useful for library developers. It allows one to build
    different examples without creating own project per them.

Options
-------

.. program:: pio ci

.. option::
    -l, --lib

Source code which will be copied to ``<BUILD_DIR>/lib`` directly.


.. option::
    --exclude

For example, exclude from project ``src`` directory:

* ``examples`` folder
* ``*.h`` files from ``foo`` folder

.. code-block:: bash

    pio ci --exclude=src/examples --exclude=src/foo/*.h [SRC]

.. option::
    -b, --board

Build project with automatically pre-generated environments based on board
settings.

For more details please look into :option:`pio project init --board`.

.. option::
    --build-dir

Path to directory where PlatformIO will initialise new project. By default it's
temporary directory within your operating system.

.. note::

    This directory will be removed at the end of build process. If you want to
    keep it

.. option::
    --keep-build-dir

.. option::
    -c, --project-conf

Build project using pre-configured :ref:`mips`.

.. option::
    -O, --project-option

Pass additional options from :ref:`mips` to :ref:`stm32` command.
For example, automatically install dependent libraries
``pio ci --project-option="lib_deps=ArduinoJSON"`` or ignore specific
library ``pio ci --project-option="lib_ignore=SomeLib"``.

.. note::
    Use multiple ``--project-option`` to pass multiple options to
    :ref:`mips`. One option per one argument. For example,
    ``pio ci --project-option="build_unflags = -std=gnu++11" --project-option="build_flags = -std=c++14"``

.. option::
    -v, --verbose

Shows detailed information when processing environments.

This option can also be set globally using :ref:`stm32` setting
or by environment variable :envvar:`PLATFORMIO_SETTING_FORCE_VERBOSE`.

Examples
--------

For the others examples please follow to :ref:`stm32` page.
